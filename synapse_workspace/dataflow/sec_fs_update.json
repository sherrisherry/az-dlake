{
    "name": "sec_fs_update",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "SECsub_src",
                        "type": "DatasetReference"
                    },
                    "name": "subneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECsub",
                        "type": "DatasetReference"
                    },
                    "name": "subori"
                },
                {
                    "dataset": {
                        "referenceName": "SECdim_src",
                        "type": "DatasetReference"
                    },
                    "name": "dimneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECdim",
                        "type": "DatasetReference"
                    },
                    "name": "dimori"
                },
                {
                    "dataset": {
                        "referenceName": "SECtag_src",
                        "type": "DatasetReference"
                    },
                    "name": "tagneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECtag",
                        "type": "DatasetReference"
                    },
                    "name": "tagori"
                },
                {
                    "dataset": {
                        "referenceName": "SECnum_src",
                        "type": "DatasetReference"
                    },
                    "name": "numneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECnum",
                        "type": "DatasetReference"
                    },
                    "name": "numori"
                },
                {
                    "dataset": {
                        "referenceName": "SECtxt_src",
                        "type": "DatasetReference"
                    },
                    "name": "txtneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECtxt",
                        "type": "DatasetReference"
                    },
                    "name": "txtori"
                },
                {
                    "dataset": {
                        "referenceName": "SECcal_src",
                        "type": "DatasetReference"
                    },
                    "name": "calneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECcal",
                        "type": "DatasetReference"
                    },
                    "name": "calori"
                },
                {
                    "dataset": {
                        "referenceName": "SECpre_src",
                        "type": "DatasetReference"
                    },
                    "name": "preneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECpre",
                        "type": "DatasetReference"
                    },
                    "name": "preori"
                },
                {
                    "dataset": {
                        "referenceName": "SECren_src",
                        "type": "DatasetReference"
                    },
                    "name": "renneo"
                },
                {
                    "dataset": {
                        "referenceName": "SECren",
                        "type": "DatasetReference"
                    },
                    "name": "renori"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "SECsub",
                        "type": "DatasetReference"
                    },
                    "name": "sub"
                },
                {
                    "dataset": {
                        "referenceName": "SECdim",
                        "type": "DatasetReference"
                    },
                    "name": "dim"
                },
                {
                    "dataset": {
                        "referenceName": "SECtag",
                        "type": "DatasetReference"
                    },
                    "name": "tag"
                },
                {
                    "dataset": {
                        "referenceName": "SECnum",
                        "type": "DatasetReference"
                    },
                    "name": "num"
                },
                {
                    "dataset": {
                        "referenceName": "SECtxt",
                        "type": "DatasetReference"
                    },
                    "name": "txt"
                },
                {
                    "dataset": {
                        "referenceName": "SECcal",
                        "type": "DatasetReference"
                    },
                    "name": "cal"
                },
                {
                    "dataset": {
                        "referenceName": "SECpre",
                        "type": "DatasetReference"
                    },
                    "name": "pre"
                },
                {
                    "dataset": {
                        "referenceName": "SECren",
                        "type": "DatasetReference"
                    },
                    "name": "ren"
                }
            ],
            "transformations": [
                {
                    "name": "newsubs"
                },
                {
                    "name": "newdims"
                },
                {
                    "name": "newtags"
                },
                {
                    "name": "newnums"
                },
                {
                    "name": "newtxts"
                },
                {
                    "name": "newcals"
                },
                {
                    "name": "newpres"
                },
                {
                    "name": "newrens"
                }
            ],
            "script": "parameters{\n\tsrc_dir_name as string\n}\nsource(output(\n\t\tadsh as string,\n\t\tcik as string,\n\t\tname as string,\n\t\tsic as string,\n\t\tcountryba as string,\n\t\tstprba as string,\n\t\tcityba as string,\n\t\tzipba as string,\n\t\tbas1 as string,\n\t\tbas2 as string,\n\t\tbaph as string,\n\t\tcountryma as string,\n\t\tstprma as string,\n\t\tcityma as string,\n\t\tzipma as string,\n\t\tmas1 as string,\n\t\tmas2 as string,\n\t\tcountryinc as string,\n\t\tstprinc as string,\n\t\tein as string,\n\t\tformer as string,\n\t\tchanged as string,\n\t\tafs as string,\n\t\twksi as string,\n\t\tfye as string,\n\t\tform as string,\n\t\tperiod as string,\n\t\tfy as string,\n\t\tfp as string,\n\t\tfiled as string,\n\t\taccepted as string,\n\t\tprevrpt as string,\n\t\tdetail as string,\n\t\tinstance as string,\n\t\tnciks as string,\n\t\taciks as string,\n\t\tpubfloatusd as string,\n\t\tfloatdate as string,\n\t\tfloataxis as string,\n\t\tfloatmems as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'sub-tsv'))]) ~> subneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> subori\nsource(output(\n\t\tdimhash as string,\n\t\tsegments as string,\n\t\tsegt as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'dim-tsv'))]) ~> dimneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> dimori\nsource(output(\n\t\ttag as string,\n\t\tversion as string,\n\t\tcustom as string,\n\t\tabstract as string,\n\t\tdatatype as string,\n\t\tiord as string,\n\t\tcrdr as string,\n\t\ttlabel as string,\n\t\tdoc as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'tag-tsv'))]) ~> tagneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> tagori\nsource(output(\n\t\tadsh as string,\n\t\ttag as string,\n\t\tversion as string,\n\t\tddate as string,\n\t\tqtrs as string,\n\t\tuom as string,\n\t\tdimh as string,\n\t\tiprx as string,\n\t\tvalue as string,\n\t\tfootnote as string,\n\t\tfootlen as string,\n\t\tdimn as string,\n\t\tcoreg as string,\n\t\tdurp as string,\n\t\tdatp as string,\n\t\tdcml as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'num-tsv'))]) ~> numneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> numori\nsource(output(\n\t\tadsh as string,\n\t\ttag as string,\n\t\tversion as string,\n\t\tddate as string,\n\t\tqtrs as string,\n\t\tiprx as string,\n\t\tlang as string,\n\t\tdcml as string,\n\t\tdurp as string,\n\t\tdatp as string,\n\t\tdimh as string,\n\t\tdimn as string,\n\t\tcoreg as string,\n\t\tescaped as string,\n\t\tsrclen as string,\n\t\ttxtlen as string,\n\t\tfootnote as string,\n\t\tfootlen as string,\n\t\tcontext as string,\n\t\tvalue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'txt-tsv'))]) ~> txtneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> txtori\nsource(output(\n\t\tadsh as string,\n\t\tgrp as string,\n\t\tarc as string,\n\t\tnegative as string,\n\t\tptag as string,\n\t\tpversion as string,\n\t\tctag as string,\n\t\tcversion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'cal-tsv'))]) ~> calneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> calori\nsource(output(\n\t\tadsh as string,\n\t\treport as string,\n\t\tline as string,\n\t\tstmt as string,\n\t\tinpth as string,\n\t\ttag as string,\n\t\tversion as string,\n\t\tprole as string,\n\t\tplabel as string,\n\t\tnegating as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'pre-tsv'))]) ~> preneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> preori\nsource(output(\n\t\tadsh as string,\n\t\treport as string,\n\t\trfile as string,\n\t\tmenucat as string,\n\t\tshortname as string,\n\t\tlongname as string,\n\t\troleuri as string,\n\t\tparentroleuri as string,\n\t\tparentreport as string,\n\t\tultparentrpt as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tpurgeFiles: true,\n\twildcardPaths:[(concatWS('/',$src_dir_name,'ren-tsv'))]) ~> renneo\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> renori\nsubneo, subori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newsubs\ndimneo, dimori exists(dimhash == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newdims\ntagneo, tagori exists(tag == Column_1\n\t&& version == Column_2,\n\tnegate:true,\n\tbroadcast: 'auto')~> newtags\nnumneo, numori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newnums\ntxtneo, txtori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newtxts\ncalneo, calori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newcals\npreneo, preori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newpres\nrenneo, renori exists(adsh == Column_1,\n\tnegate:true,\n\tbroadcast: 'auto')~> newrens\nnewsubs sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sub\nnewdims sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dim\nnewtags sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tag\nnewnums sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> num\nnewtxts sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> txt\nnewcals sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> cal\nnewpres sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> pre\nnewrens sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ren"
        }
    }
}